ASMA Ver. 0.2.0  str-001-srst.asm: Test SRST Instruction                                            27 Dec 2018 11:34:14  Page     1

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                             2 *
                                                                             3 *Testcase str-001-srst
                                                                             4 *  Test cases for variations on the SRST (Search String) instruction.
                                                                             5 *
                                                                             6 ***********************************************************************
                                                                             7 *
                                                                             8 *                        str-001-srst.asm
                                                                             9 *
                                                                            10 * Created and placed into the public domain 2018-12-27 by Bob Polmanter.
                                                                            11 *
                                                                            12 * The SRSTT instruction is tested against the definition in the z/Architecture
                                                                            13 *   Principles of Operation, SA22-7832.
                                                                            14 *
                                                                            15 * Test data is assembled into this program, and some test data is
                                                                            16 * generated by this program. The test script (str-001-srst.tst) that runs
                                                                            17 * verifies the resulting status of registers and condition codes
                                                                            18 * through Hercules R commands.
                                                                            19 *
                                                                            20 ***********************************************************************
                                                                            21 *
                                                                            22 * Tests performed with SRST (Search String):
                                                                            23 *
                                                                            24 * 1.  R0 bits 32-55 non-zero gives PIC06
                                                                            25 * 2.  Search char found; no operands cross page boundary
                                                                            26 * 3.  Search char not found; no operands cross page boundary
                                                                            27 * 4.  Search char found; operands 1&2 are equal (1 byte search)
                                                                            28 * 5.  Search char not found; operands 1&2 are equal (1 byte search)
                                                                            29 * 6.  Search char found; Operand 1 crosses page boundary
                                                                            30 * 7.  Search char not found; Operand 1 crosses page boundary
                                                                            31 * 8.  Search char found; large multi-page search
                                                                            32 * 9.  Search char not found; large multi-page search
                                                                            33 *
                                                                            34 *
                                                                            35 * NOTE - the nature of the string instructions is such that this test
                                                                            36 *        case will only validate properly for the string instruction
                                                                            37 *        improvement modifications committed in December 2018.  The
                                                                            38 *        computation of the CPU determined number of bytes is an
                                                                            39 *        unpredictable number on real hardware (at least above the
                                                                            40 *        minimum value) and the method used in Hercules prior to
                                                                            41 *        instruction improvements calculated it differently than the
                                                                            42 *        improved method.  As a result, the operand registers will
                                                                            43 *        likely contain different values when compared by the test
                                                                            44 *        script due to the different CPU number of bytes
                                                                            45 *        determined.  None of the methods are wrong, and failing
                                                                            46 *        results in the test script are not necessarily wrong.
                                                                            47 *        But this program and the resulting test script comparisons
                                                                            48 *        were written for the method used by the improved string
                                                                            49 *        instructions (CLST, MVST, SRST).
                                                                            50 *
                                                                            51 *
                                                                            52 ***********************************************************************
                                                                            53 *
ASMA Ver. 0.2.0  str-001-srst.asm: Test SRST Instruction                                            27 Dec 2018 11:34:14  Page     2

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                            54 *
                                      0000000000000000  000000000000087F    55 SRST001  START 0
                                      0000000000000000  0000000000000001    56 STRTLABL EQU   *
                                      0000000000000000  0000000000000001    57 R0       EQU   0
                                      0000000000000001  0000000000000001    58 R1       EQU   1
                                      0000000000000002  0000000000000001    59 R2       EQU   2
                                      0000000000000003  0000000000000001    60 R3       EQU   3
                                      0000000000000004  0000000000000001    61 R4       EQU   4
                                      0000000000000005  0000000000000001    62 R5       EQU   5
                                      0000000000000006  0000000000000001    63 R6       EQU   6
                                      0000000000000007  0000000000000001    64 R7       EQU   7
                                      0000000000000008  0000000000000001    65 R8       EQU   8
                                      0000000000000009  0000000000000001    66 R9       EQU   9
                                      000000000000000A  0000000000000001    67 R10      EQU   10
                                      000000000000000B  0000000000000001    68 R11      EQU   11
                                      000000000000000C  0000000000000001    69 R12      EQU   12
                                      000000000000000D  0000000000000001    70 R13      EQU   13
                                      000000000000000E  0000000000000001    71 R14      EQU   14
                                      000000000000000F  0000000000000001    72 R15      EQU   15
                                                                            73 *
                                                                            74 *
0000000000000000                      0000000000000000                      75          USING *,R15
                                                                            76 *
                                                                            77 * Selected z/Arch low core layout
                                                                            78 *
0000000000000000                      0000000000000000  000000000000008C    79          ORG   STRTLABL+X'8C'      Program check interrution code
000000000000008C  00000000                                                  80 PGMINTC  DS    F
                                                                            81 *
                                      0000000000000150  0000000000000001    82 PGMOPSW  EQU   STRTLABL+X'150'     z/Arch Program check old PSW
                                                                            83 *
0000000000000090                      0000000000000090  00000000000001A0    84          ORG   STRTLABL+X'1A0'     z/Arch Restart PSW
00000000000001A0  00000001 80000000                                         85          DC    X'0000000180000000',A(0,START)
                                                                            86 *
00000000000001B0                      00000000000001B0  00000000000001D0    87          ORG   STRTLABL+X'1D0'     z/Arch Program check new PSW
00000000000001D0  00000001 80000000                                         88 PGMNPSW  DC    X'0000000180000000',A(0,PROGCHK)
                                                                            89 *
                                                                            90 * Program check routine.  We are looking for a single specification
                                                                            91 * exeception.  Any other program check is not expected to occur and
                                                                            92 * results in a hard wait.
                                                                            93 *
00000000000001E0                      00000000000001E0  0000000000000200    94          ORG   STRTLABL+X'200'
0000000000000200                                                            95 PROGCHK  DS    0H             Program check occured...
0000000000000200  9506 F08F                             000000000000008F    96          CLI   PGMINTC+3,X'06'  Specification?
0000000000000204  4780 F21E                             000000000000021E    97          BE    CONTINUE       Yes, this is expected (once)
0000000000000208  B2B2 F2F8                             00000000000002F8    98 HALT     LPSWE HALTPSW        Unexpected PIC, disabled wait
ASMA Ver. 0.2.0  str-001-srst.asm: Test SRST Instruction                                            27 Dec 2018 11:34:14  Page     3

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                           100 ***********************************************************************
                                                                           101 *
                                                                           102 *  Main program.
                                                                           103 *
000000000000020C                                                           104 START    DS    0H
                                                                           105 *
                                                                           106 **********
                                                                           107 * PREP   * Prepare a multi-page frame area
                                                                           108 **********
                                                                           109 *
000000000000020C  9825 F700                             0000000000000700   110          LM    R2,R5,AREA              -> large area and length
0000000000000210  0E24                                                     111          MVCL  R2,R4                   Pad it full of X'AA'
                                                                           112 *
                                                                           113 **********
                                                                           114 * TEST 1 * Ensure any non-zero bits in R0 bits 32-55 gives PIC 06
                                                                           115 **********
                                                                           116 *
0000000000000212  4100 0400                             0000000000000400   117          LA    R0,X'400'               Set invalid termination char
0000000000000216  9857 F710                             0000000000000710   118          LM    R5,R7,TEST1             Get string area ptrs
000000000000021A  B25E 0076                                                119          SRST  R7,R6                   Attempt a SRST, should get PIC 6
                                                                           120 *
                                      000000000000021E  0000000000000001   121 CONTINUE EQU   *
000000000000021E  D207 F1D0 F2F8      00000000000001D0  00000000000002F8   122          MVC   PGMNPSW,HALTPSW         All other p checks should halt
                                                                           123 *
                                                                           124 **********
                                                                           125 * TEST 2 * Search char found; no operands cross page boundary
                                                                           126 **********
                                                                           127 *
0000000000000224  9857 F71C                             000000000000071C   128          LM    R5,R7,TEST2             Get string area ptrs
0000000000000228  925B 5000                             0000000000000000   129          MVI   0(R5),C'$'              Set search char
000000000000022C  4D90 F2C8                             00000000000002C8   130          BAS   R9,SEARCH               search the string
0000000000000230  9068 F800                             0000000000000800   131          STM   R6,R8,RESULT2           Save test result regs
0000000000000234  92AA 5000                             0000000000000000   132          MVI   0(R5),X'AA'             Reset the search char
                                                                           133 *
                                                                           134 **********
                                                                           135 * TEST 3 * Search char not found; no operands cross page boundary
                                                                           136 **********
                                                                           137 *
0000000000000238  9857 F728                             0000000000000728   138          LM    R5,R7,TEST3             Get string area ptrs
000000000000023C  925B 5000                             0000000000000000   139          MVI   0(R5),C'$'              Set search char
0000000000000240  4D90 F2C8                             00000000000002C8   140          BAS   R9,SEARCH               search the string
0000000000000244  9068 F810                             0000000000000810   141          STM   R6,R8,RESULT3           Save test result regs
0000000000000248  92AA 5000                             0000000000000000   142          MVI   0(R5),X'AA'             Reset the search char
                                                                           143 *
                                                                           144 **********
                                                                           145 * TEST 4 * Search char found; operands contain equal addresses
                                                                           146 **********
                                                                           147 *
000000000000024C  9857 F734                             0000000000000734   148          LM    R5,R7,TEST4             Get string area ptrs
0000000000000250  925B 5000                             0000000000000000   149          MVI   0(R5),C'$'              Set search char
0000000000000254  4D90 F2C8                             00000000000002C8   150          BAS   R9,SEARCH               search the string
0000000000000258  9068 F820                             0000000000000820   151          STM   R6,R8,RESULT4           Save test result regs
ASMA Ver. 0.2.0  str-001-srst.asm: Test SRST Instruction                                            27 Dec 2018 11:34:14  Page     4

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

000000000000025C  92AA 5000                             0000000000000000   152          MVI   0(R5),X'AA'             Reset the search char
                                                                           153 *
                                                                           154 **********
                                                                           155 * TEST 5 * Search char not found; operands contain equal addresses
                                                                           156 **********
                                                                           157 *
0000000000000260  9857 F740                             0000000000000740   158          LM    R5,R7,TEST5             Get string area ptrs
0000000000000264  925B 5000                             0000000000000000   159          MVI   0(R5),C'$'              Set search char
0000000000000268  4D90 F2C8                             00000000000002C8   160          BAS   R9,SEARCH               search the string
000000000000026C  9068 F830                             0000000000000830   161          STM   R6,R8,RESULT5           Save test result regs
0000000000000270  92AA 5000                             0000000000000000   162          MVI   0(R5),X'AA'             Reset the search char
                                                                           163 *
                                                                           164 **********
                                                                           165 * TEST 6 * Search char found; Operand 1 crosses page boundary
                                                                           166 **********
                                                                           167 *
0000000000000274  9857 F74C                             000000000000074C   168          LM    R5,R7,TEST6             Get string area ptrs
0000000000000278  925B 5000                             0000000000000000   169          MVI   0(R5),C'$'              Set search char
000000000000027C  4D90 F2C8                             00000000000002C8   170          BAS   R9,SEARCH               search the string
0000000000000280  9068 F840                             0000000000000840   171          STM   R6,R8,RESULT6           Save test result regs
0000000000000284  92AA 5000                             0000000000000000   172          MVI   0(R5),X'AA'             Reset the search char
                                                                           173 *
                                                                           174 **********
                                                                           175 * TEST 7 * Search char not found; Operand 1 crosses page boundary
                                                                           176 **********
                                                                           177 *
0000000000000288  9857 F758                             0000000000000758   178          LM    R5,R7,TEST7             Get string area ptrs
000000000000028C  925B 5000                             0000000000000000   179          MVI   0(R5),C'$'              Set search char
0000000000000290  4D90 F2C8                             00000000000002C8   180          BAS   R9,SEARCH               search the string
0000000000000294  9068 F850                             0000000000000850   181          STM   R6,R8,RESULT7           Save test result regs
0000000000000298  92AA 5000                             0000000000000000   182          MVI   0(R5),X'AA'             Reset the search char
                                                                           183 *
                                                                           184 **********
                                                                           185 * TEST 8 * Search char found; large multi-page search
                                                                           186 **********
                                                                           187 *
000000000000029C  9857 F764                             0000000000000764   188          LM    R5,R7,TEST8             Get string area ptrs
00000000000002A0  925B 5000                             0000000000000000   189          MVI   0(R5),C'$'              Set search char
00000000000002A4  4D90 F2C8                             00000000000002C8   190          BAS   R9,SEARCH               search the string
00000000000002A8  9068 F860                             0000000000000860   191          STM   R6,R8,RESULT8           Save test result regs
00000000000002AC  92AA 5000                             0000000000000000   192          MVI   0(R5),X'AA'             Reset the search char
                                                                           193 *
                                                                           194 **********
                                                                           195 * TEST 9 * Search char not found; large multi-page search
                                                                           196 **********
                                                                           197 *
00000000000002B0  9857 F770                             0000000000000770   198          LM    R5,R7,TEST9             Get string area ptrs
00000000000002B4  925B 5000                             0000000000000000   199          MVI   0(R5),C'$'              Set search char
00000000000002B8  4D90 F2C8                             00000000000002C8   200          BAS   R9,SEARCH               search the string
00000000000002BC  9068 F870                             0000000000000870   201          STM   R6,R8,RESULT9           Save test result regs
00000000000002C0  92AA 5000                             0000000000000000   202          MVI   0(R5),X'AA'             Reset the search char
                                                                           203 *
ASMA Ver. 0.2.0  str-001-srst.asm: Test SRST Instruction                                            27 Dec 2018 11:34:14  Page     5

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                           204 *
00000000000002C4  B2B2 F2E8                             00000000000002E8   205          LPSWE WAITPSW                 EOJ, load disabled wait PSW
                                                                           206 *
                                                                           207 *-- SRST routine used by tests
                                                                           208 *
                                      00000000000002C8  0000000000000001   209 SEARCH   EQU   *
00000000000002C8  4100 005B                             000000000000005B   210          LA    R0,C'$'                 Load search character
00000000000002CC  1B88                                                     211          SR    R8,R8                   Init SRST counter
                                                                           212 *
                                      00000000000002CE  0000000000000001   213 INVOKE   EQU   *
00000000000002CE  B25E 0076                                                214          SRST  R7,R6                   Look for search char
00000000000002D2  4180 8001                             0000000000000001   215          LA    R8,1(,R8)               Count executions of SRST
00000000000002D6  4780 F2E4                             00000000000002E4   216          BC    8,BADCC                 CC=0 SHOULD NEVER HAPPEN
00000000000002DA  4710 F2CE                             00000000000002CE   217          BC    1,INVOKE                Restart the search
00000000000002DE  B222 0080                                                218          IPM   R8                      Put final CC in high R8
00000000000002E2  07F9                                                     219          BR    R9                      Return
                                                                           220 *
00000000000002E4  B2B2 F308                             0000000000000308   221 BADCC    LPSWE BADCCPSW                Stop on invalid CC
                                                                           222 *
00000000000002E8                                                           223          DS    0D             Ensure correct alignment for psw
00000000000002E8  00020000 00000000                                        224 WAITPSW  DC    X'0002000000000000',A(0,0) Normal end - disabled wait
00000000000002F8  00020000 00000000                                        225 HALTPSW  DC    X'0002000000000000',XL4'00',X'0000DEAD' Abnormal end
0000000000000308  00020000 00000000                                        226 BADCCPSW DC    X'0002000000000000',XL4'00',X'000BADCC' Abnormal end
                                                                           227 *
                                                                           228 *
                                                                           229 *
                                                                           230 *
0000000000000318                      0000000000000318  0000000000000700   231          ORG   STRTLABL+X'700'
                                                                           232 *
0000000000000700  00002000                                                 233 AREA     DC    X'00002000'             -> start of multi-page area
0000000000000704  00010000                                                 234 AREALEN  DC    A(4096*16)              Size of multi=page area
0000000000000708  00000000                                                 235 ZERO     DC    A(0)
000000000000070C  AA000000                                                 236 PAD      DC    X'AA000000'             MVCL pad char
                                                                           237 *
0000000000000710                                                           238 TEST1    DS    0F                      Test should fail PIC06
0000000000000710  00002532                                                 239          DC    X'00002532'             -> where to place search char
0000000000000714  00002500                                                 240          DC    X'00002500'             -> where to start search
0000000000000718  00002580                                                 241          DC    X'00002580'             -> end of search area
                                                                           242 *
000000000000071C                                                           243 TEST2    DS    0F                      Op 1 doesnt cross page
000000000000071C  00002532                                                 244          DC    X'00002532'             -> where to place search char
0000000000000720  00002500                                                 245          DC    X'00002500'             -> where to start search
0000000000000724  00002580                                                 246          DC    X'00002580'             -> end of search area
                                                                           247 *
0000000000000728                                                           248 TEST3    DS    0F                      Op 1 doesnt cross page
0000000000000728  00001000                                                 249          DC    X'00001000'             -> search char outside of area
000000000000072C  00002500                                                 250          DC    X'00002500'             -> where to start search
0000000000000730  00002580                                                 251          DC    X'00002580'             -> end of search area
                                                                           252 *
0000000000000734                                                           253 TEST4    DS    0F                      Op 1&2 are equal, search ok
0000000000000734  00002500                                                 254          DC    X'00002500'             -> where to place search char
0000000000000738  00002500                                                 255          DC    X'00002500'             -> where to start search
ASMA Ver. 0.2.0  str-001-srst.asm: Test SRST Instruction                                            27 Dec 2018 11:34:14  Page     6

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

000000000000073C  00002500                                                 256          DC    X'00002500'             -> end of search area
                                                                           257 *
0000000000000740                                                           258 TEST5    DS    0F                      Op 1&2 are equal, search fails
0000000000000740  00001000                                                 259          DC    X'00001000'             -> search char outside of area
0000000000000744  00002500                                                 260          DC    X'00002500'             -> where to start search
0000000000000748  00002500                                                 261          DC    X'00002500'             -> end of search area
                                                                           262 *
000000000000074C                                                           263 TEST6    DS    0F                      Op 1 crosses page; search ok
000000000000074C  00003100                                                 264          DC    X'00003100'             -> where to place search char
0000000000000750  00002F80                                                 265          DC    X'00002F80'             -> where to start search
0000000000000754  00003300                                                 266          DC    X'00003300'             -> end of search area
                                                                           267 *
0000000000000758                                                           268 TEST7    DS    0F                      Op 1 crosses page, search fails
0000000000000758  00001000                                                 269          DC    X'00001000'             -> search char outside of area
000000000000075C  00002F80                                                 270          DC    X'00002F80'             -> where to start search
0000000000000760  00003300                                                 271          DC    X'00003300'             -> end of search area
                                                                           272 *
0000000000000764                                                           273 TEST8    DS    0F                      large multi-page; search ok
0000000000000764  0000BF80                                                 274          DC    X'0000BF80'             -> where to place search char
0000000000000768  00002100                                                 275          DC    X'00002100'             -> where to start search
000000000000076C  0000BFFF                                                 276          DC    X'0000BFFF'             -> end of search area
                                                                           277 *
0000000000000770                                                           278 TEST9    DS    0F                      large multi-page, search fails
0000000000000770  00001000                                                 279          DC    X'00001000'             -> search char outside of area
0000000000000774  00002100                                                 280          DC    X'00002100'             -> where to start search
0000000000000778  0000BFFF                                                 281          DC    X'0000BFFF'             -> end of search area
                                                                           282 *
                                                                           283 *
                                                                           284 *  Locations for results
                                                                           285 *
                                                                           286 * Result fields are kept on 16-byte boundaries to more easily
                                                                           287 * track their assembled offsets for use in the .tst script.
                                                                           288 *
                                                                           289 *                              offset
000000000000077C                      000000000000077C  0000000000000800   290          ORG   STRTLABL+X'800'   8xx
0000000000000800  00000000 00000000                                        291 RESULT2  DS    4F                 00   Register results test 2
0000000000000810  00000000 00000000                                        292 RESULT3  DS    4F                 10   Register results test 3
0000000000000820  00000000 00000000                                        293 RESULT4  DS    4F                 20   Register results test 4
0000000000000830  00000000 00000000                                        294 RESULT5  DS    4F                 30   Register results test 5
0000000000000840  00000000 00000000                                        295 RESULT6  DS    4F                 40   Register results test 6
0000000000000850  00000000 00000000                                        296 RESULT7  DS    4F                 50   Register results test 7
0000000000000860  00000000 00000000                                        297 RESULT8  DS    4F                 60   Register results test 8
0000000000000870  00000000 00000000                                        298 RESULT9  DS    4F                 70   Register results test 9
                                                                           299 *
                                                                           300 *
                                                                           301 **-- Corresponding .tst script comparisons
                                                                           302 *
                                                                           303 *                            0 1 2 3  4 5 6 7  8 9 A B  C D E F
                                                                           304 *r 008E.02
                                                                           305 *Want "PIC 06"              0006
                                                                           306 *r 0800.0C
                                                                           307 *Want "Test 2 R6-R8"        00002500 00002532 10000001
ASMA Ver. 0.2.0  str-001-srst.asm: Test SRST Instruction                                            27 Dec 2018 11:34:14  Page     7

      LOC            OBJECT CODE           ADDR1             ADDR2        STMT

                                                                           308 *r 0810.0C
                                                                           309 *Want "Test 3 R6-R8"        00002500 00002580 20000001
                                                                           310 *r 0820.0C
                                                                           311 *Want "Test 4 R6-R8"        00002500 00002500 20000001
                                                                           312 *r 0830.0C
                                                                           313 *Want "Test 5 R6-R8"        00002500 00002500 20000001
                                                                           314 *r 0840.0C
                                                                           315 *Want "Test 6 R6-R8"        00003080 00003100 10000002
                                                                           316 *r 0850.0C
                                                                           317 *Want "Test 7 R6-R8"        00003080 00003300 20000002
                                                                           318 *r 0860.0C
                                                                           319 *Want "Test 8 R6-R8"        0000B000 0000BF80 1000000A
                                                                           320 *r 0870.0C
                                                                           321 *Want "Test 9 R6-R8"        0000B000 0000BFFF 2000000A
                                                                           322 *
                                                                           323          END
ASMA Ver. 0.2.0  str-001-srst.asm: Test SRST Instruction                                            27 Dec 2018 11:34:14  Page     8

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

AREA                X    000700       4   233  110
AREALEN             A    000704       4   234
BADCC               I    0002E4       4   221  216
BADCCPSW            X    000308       8   226  221
CONTINUE            U    00021E       1   121   97
HALT                I    000208       4    98
HALTPSW             X    0002F8       8   225   98  122
IMAGE               1    000000    2176     0
INVOKE              U    0002CE       1   213  217
PAD                 X    00070C       4   236
PGMINTC             F    00008C       4    80   96
PGMNPSW             X    0001D0       8    88  122
PGMOPSW             U    000150       1    82
PROGCHK             H    000200       2    95   88
R0                  U    000000       1    57  117  210
R1                  U    000001       1    58
R10                 U    00000A       1    67
R11                 U    00000B       1    68
R12                 U    00000C       1    69
R13                 U    00000D       1    70
R14                 U    00000E       1    71
R15                 U    00000F       1    72   75
R2                  U    000002       1    59  110  111
R3                  U    000003       1    60
R4                  U    000004       1    61  111
R5                  U    000005       1    62  110  118  128  129  132  138  139  142  148  149  152  158  159  162  168  169  172
                                               178  179  182  188  189  192  198  199  202
R6                  U    000006       1    63  119  131  141  151  161  171  181  191  201  214
R7                  U    000007       1    64  118  119  128  138  148  158  168  178  188  198  214
R8                  U    000008       1    65  131  141  151  161  171  181  191  201  211  215  218
R9                  U    000009       1    66  130  140  150  160  170  180  190  200  219
RESULT2             F    000800       4   291  131
RESULT3             F    000810       4   292  141
RESULT4             F    000820       4   293  151
RESULT5             F    000830       4   294  161
RESULT6             F    000840       4   295  171
RESULT7             F    000850       4   296  181
RESULT8             F    000860       4   297  191
RESULT9             F    000870       4   298  201
SEARCH              U    0002C8       1   209  130  140  150  160  170  180  190  200
SRST001             J    000000    2176    55
START               H    00020C       2   104   85
STRTLABL            U    000000       1    56   79   82   84   87   94  231  290
TEST1               F    000710       4   238  118
TEST2               F    00071C       4   243  128
TEST3               F    000728       4   248  138
TEST4               F    000734       4   253  148
TEST5               F    000740       4   258  158
TEST6               F    00074C       4   263  168
TEST7               F    000758       4   268  178
TEST8               F    000764       4   273  188
TEST9               F    000770       4   278  198
ASMA Ver. 0.2.0  str-001-srst.asm: Test SRST Instruction                                            27 Dec 2018 11:34:14  Page     9

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

WAITPSW             X    0002E8       8   224  205
ZERO                A    000708       4   235
ASMA Ver. 0.2.0  str-001-srst.asm: Test SRST Instruction                                            27 Dec 2018 11:34:14  Page    10

MACRO   DEFN  REFERENCES

No defined macros
ASMA Ver. 0.2.0  str-001-srst.asm: Test SRST Instruction                                            27 Dec 2018 11:34:14  Page    11

   DESC     SYMBOL  SIZE    POS      ADDR

Entry: 0

Image      IMAGE    2176  000-87F  000-87F
  Region            2176  000-87F  000-87F
    CSECT  SRST001  2176  000-87F  000-87F
ASMA Ver. 0.2.0  str-001-srst.asm: Test SRST Instruction                                            27 Dec 2018 11:34:14  Page    12

   STMT         FILE NAME

1     D:\satk\str-001-srst.asm


** NO ERRORS FOUND **

