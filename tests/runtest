#!/bin/bash

# Note: UNIX and REXX required.

# This  file  was  put  into  the  public  domain 2015-10-05 by John P.
# Hartmann.   You  can  use  it  for anything you like, as long as this
# notice remains.

# Anything  said  in  comments in this file assumes that you have built
# Hercules by git pull; autogen.sh; make.

# This script is in support of "make check".  If run by hand, it should
# be  invoked  from  the  top level object directory, "hyperion" if you
# configured  in  the source tree; the external object directory if you
# configured elsewhere.

# Arguments:

# 1     Path  from the current directory to the tests source directory.
#       Specify - (minus, hyphen) for the default ../hyperion/tests

# 2     File  name  of  test  case  omitting  the .tst extension or the
#       default  '*'  for  all .tst files.  Quote the asterisk to avoid
#       premature file name expansion.  But see #4.

# 3     Specify  noexit  to  suppress  the  exit  command that normally
#       terminates  the test cases.  This will allow you to poke around
#       with  console commands after the test script has run.  Anything
#       else,  including nothing adds an exit command at the end of the
#       composite script.

# 4     File type of test cases.  Default .tst.

# 5+    Passed to redtest.rexx.  "quiet" or <var>=<value>.

# To run a specific test case:
#       ../hyperion/tests/runtest - <fname>
# Again, be sure to omit the extension.

# Tests  are  normally  done alphabetically.  You can use the scripting
# facilities  to  include specific test case files in any order, but do
# not  give these embedded files the default extension (unless you want
# them run twice!).

# We  can  assume  that  the  tests  live in the same directory as this
# script, but you cannot assume that the executable is in the directory
# above.  Read INSTALL in the source directory.

# This  script  must  be  run  from  the object directory, that is, the
# directory  where the "make" command was issued and where the hercules
# libtool  script  is  built.  Or the directory must contain a symbolic
# link to the hercules executable.

function verlt()
{
   if [ "$2" == "Bourne-Again" ] ; then
      return 1
   fi
   echo $*
   return 0
}

wfn=allTests

if [ ${FUNCNAME[0]} == "source" ] ; then
   echo "Do not source $BASH_SOURCE"
   return 20
fi

# Determine  the  relative path to the tests directory.  The default is
# set on the assumption that this file is in the tests directory, which
# is  where it is in the source tree.  If this is not the case, you are
# adviced to write your own derivative of this script.

testdir=$(dirname $0)
dir=${1:-$testdir}
if [ "$dir" == "-" ] ; then
        dir=$testdir
fi

hdir=.
if [ ! -x hercules ] ; then
   if [ -x $dir/../hercules ] ; then
        hdir = $dir/../hercules
   else
      echo 'Hercules executable (or the libtool front end) is not where expected.'
      exit 16
   fi
fi

if [ -f $hdir/config.h ] ; then
   ptrsize=$(grep SIZEOF_INT_P $hdir/config.h | cut -d ' ' -f 3)
   vars="$vars ptrsize=$ptrsize"
else
   echo "Unable to determine the size of a pointer.  Specify ptrsize=4 if on a 32-bit system."
fi

shift

fns=${1:-*}

shift

exit=${1:-exit}

shift

ftype=${1:-tst}

shift

# Verify that the configuration file and redtest.rexx are available.

rv=0
if [ ! -f $dir/tests.conf ] ; then
   echo "Error: Hercules configuration file $dir/tests.conf not found."
   rv=1
fi

if [ ! -f $dir/redtest.rexx ] ; then
   echo "Error: Post processor redtest.rexx is not available."
   rv=1
fi

if [ -z $(which rexx) ] ; then
   echo "Error: REXX interpreter is not available."
   rv=1
fi

verlt $(file $hdir/hercules)
vrv=$?
if [ $vrv = 0 ] ; then
   echo "Error:  Hercules executable $hdir/hercules is not the libtool wrapper."
   rv=1
fi

if [ 0 != $rv ] ; then
   exit 12
fi

# Generate composite file of all test cases, but do not call it .tst as
# that  would  cause  a  recursion  if executed in the tests directory.
# File  name  expansion  sorts  it  alphabetically (some shell variants
# ignore case and/or punctuation).

echo defsym testpath $dir|cat - $dir/$fns.$ftype >$wfn.testin
rv=$?
if [ $rv != 0 ] ; then
   exit $rv
fi

# Run  the script through Hercules.  Redirecting standard output writes
# a log file.  2>&1 disables the panel display and the ability to enter
# panel commands.

cmd="$hdir/hercules -d -f $dir/tests.conf -r $wfn.testin -t"
if [ "$exit" = "noexit" ] ; then
        $cmd >$wfn.out
        rv=$?
else
        # Run  Hercules  in  daemon mode be redirecting both stdout and
        # stderr.
        echo exit >>$wfn.testin
        $cmd >$wfn.out 2>&1
        rv=$?
fi

# Read entire file to allow redtest.rexx to parse the features list
if [ $rv = 0 ] ; then
   rexx $dir/redtest.rexx $wfn.out $vars $*
   rv=$?
fi

exit $rv
