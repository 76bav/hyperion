ON LOW-LEVEL TEST CASES
=======================

This  directory  contains  test  cases  that are run by Hercules console
commands.

.core
-----

Files  that  have  the  extension  .core  are core images that are to be
loaded by Hercules console command.

.txt
----

Files  that  have  a  txt  extension  must  be  passed  to  Hercules  as
configuration  files.   You  must  eyeball  the console output to ensure
correct  execution.  Test case usually end by loading a disabled PSW; if
that PSW contains 0 as the instruction address, the test case likely ran
without program checks.

.tst
----

Files  that  have  a  tst extension are to be run by the "runtest" shell
script  or  "runtest.cmd" command script.  They are run and the Hercules
console  output is inspected for correctness.  You can create .tst files
either  "by  hand"; or by assembly on a /360 system (VM, MVS, DOS), then
TEXT decks then need to be processed into .tst files.

On  UNIX, assuming that your are building outside the source tree in the
"atom" directory such that the source is ../hyperion, issue this command
to run and verify the test cases:

   ../hyperion/tests/runtest

On  Windows,  the  command  script  runtest.cmd runs the test cases.  It
requires  a  first  parameter to specify the location of the test files.
Refer to the comments at the beginning of the file

In  either  case,  runtest  first  creates a composite set of test cases
(allTests.tst  in  the  current  working  directory)  and  then  invokes
Hercules  to run them using the configuration file tests.conf and the rc
file  just  created.   This  will make the screen flicker while Hercules
runs.   When  it  completes,  the console output (allTests.out) is pared
down   by  a  sed  script  (to  allTests.sout)  and  then  inspected  by
redtest.rexx.

The runtest return code is the number of failed test cases.

The tail end of an early sample output is:

HHC02264I Script 1: file allTests.tst processing ended
HHC00101I Thread id b6e78700, prio 2147483647, name Control panel ended
Test logicImmediate assembled 5 Oct 2015 13:49:20 by BLDHTC EXEC. 7 OK compares. rv=0
Test sske#1 assembled 5 Oct 2015 14:01:51 by BLDHTC EXEC. 0 OK compares. rv=0
Done 2 tests. 0 failed; 2 OK.
[/usr/data/src/hercules/atom]

.assemble
---------

Source  files  for  the  .tst  test cases.  On z/VM with HLASM, the test
cases can be prepared by BLDHTC EXEC.  ASMTST XEDIT is a sample macro to
perform the build step from within the Xedit session.

On  VM/370,  you  can use the system assembler to assemble, but you must
somehow  process  the  TEXT  deck  yourself.   Perhaps  download and run
through a command script?

.tst file directives
--------------------

.tst  files  are executed as Hercules rc files, so they contain Hercules
console  commands.   A  number  of  loud  comments  (beginning  with  an
asterisk) are processed by redtest.rexx:

*           Comment; ignored.  There must be a blank after the asterisk.

*Testcase   Identify beginning of a test case.

*Compare    An  r  command  follows  and the output should be stored for
            later comparison.

*Want       The  expected  r  command  output.  A string identifying the
            comparison  may  be  enclosed  in  double  quotes before the
            compare data.

*Gpr        A  previous  gpr  console command should have been issued to
            display  the  general  registers.  The specified register is
            compared  with  the stored data.  Specify a decimal register
            number with no leading zero.

*Key        Compare  the  specified key against the key displayed in the
            previous r command.

*Prefix     Compre  the  specified  value  to the contents of the prefix
            register displayed by a previous pr command.

*Program    A  program  check  is expected, for example to verify that a
            privileged operation causes an 0c2.

*Done       End of a test case.

logicimm.tst shows examples of all directives, except *Key and *Program;
see sske.tst for an example of these.
