  TITLE 'fix-page.asm: Test the Fix Page E502 Assist'
*
***********************************************************************
*
*Testcase fix-page
*  A test case for "Simplified Execution Path" of the Fix
*  Page E502 Assist instruction.
*
***********************************************************************
*
*                        fix-page.asm 
*
* Created and placed into the public domain 05 OCT 2020 by Bob Polmanter.
*
* The Fix Page E502 Assist instruction is tested against the definition 
* of the Simplified Execution Path as described in the System/370
* Assists for MVS, publication GA22-7079-1.
*
* Test data is assembled into this program, and some test data is
* generated by this program. The test script (fix-page.tst) that runs
* verifies the resulting status of registers and path taken
* through Hercules R commands.
*
*
* Tests performed with Fix Page E502:
*
* 1.  That GR14 contains the address of the next sequential instruction
*       following the E502 instruction.
* 2.  That GR15 contains the contents of the fullword field MPLPFAL.
* 3.  That the PSW next instruction address is loaded with the fullword
*     field MPLPFAL and that execution resumed at that location.
*
* NOTE: the MPLP is a control block normally maintained by some versions of
*       the S/370 MVS operating system in support of the various Assists. The
*       base address of the MPLP is defined by the second operand of the
*       E502 instruction.  The word MPLPFAL is at offset 0x34 into the MPLP,
*       as described in GA22-7079-1.
*
***********************************************************************
*
*
FPA001   START 0
STRTLABL EQU   *
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
*
         USING *,R0
*
* Selected S/370 low core layout
*
         ORG   STRTLABL+X'8C'      Program check interrution code
PGMINTC  DS    F
*
PGMOPSW  EQU   STRTLABL+X'28'      Program check old PSW
*
         ORG   STRTLABL+X'00'      Restart PSW
         DC    X'000C0000',A(START)
*
         ORG   STRTLABL+X'68'      Program check new PSW
PGMNPSW  DC    X'00020000',X'0000DEAD' Abnormal end
*
         ORG   STRTLABL+X'A4'      Address of MPLP assist control block
AMPLP    DC    A(MPLP)

         EJECT
***********************************************************************
*
*  Main program.
*
         ORG   STRTLABL+X'200'
START    DS    0H
*
*
**********
* TEST   * Execute Fix Page on simplified path return
**********
*
         LA    R14,1                   Ensure R14 different than Assist result
         LA    R15,1                   Ensure R15 different than Assist result
         STM   R14,R15,RESULTS         Initialize results area
*
         LM    R1,R2,PGSTART           -> starting,ending page addresses
         L     R0,PGRADD               -> address within page to be fixed
         DC    X'E502',AL2(0),S(AMPLP) Fix Page; operand 1 not used
*
FAIL     EQU   *
         B     EOJ                     If here, test has failed
*
SUCCESS  EQU   *
         STM   R14,R15,RESULTS         If E502 success, show R14-R15 results
*
EOJ      EQU   *
         LPSW  DWAITPSW                EOJ, load disabled wait PSW
*
         DS    0D                      Ensure correct alignment for psw
DWAITPSW DC    X'000A000000000000'     Test end - disabled wait
*  
*
         ORG   STRTLABL+X'300'
RESULTS  DC    X'00000000'             R14 value (should be A(FAIL) )
         DC    X'00000000'             R15 value (should be A(SUCCESS) )
*
*
         ORG   STRTLABL+X'700'
*
* The MPLP area below defines only the relevant part of the MPLP assist control block; in this
* case, the location at MPLP+X'34' (MPLPFAL) needs to contain the address of where the assist
* should begin execution at the completion of the X'E502' instruction.
*
MPLP     DC    A(0)                    Relevant MPLP block definition
         DC    A(0)                    +4 
         DC    A(0)                    +8 
         DC    A(0)                    +C 
         DC    A(0)                    +10 
         DC    A(0)                    +14 
         DC    A(0)                    +18 
         DC    A(0)                    +1C 
         DC    A(0)                    +20 
         DC    A(0)                    +24 
         DC    A(0)                    +28 
         DC    A(0)                    +2C 
         DC    A(0)                    +30 
MPLPFAL  DC    A(SUCCESS)              +34 
         DC    A(0)                    +38 
*
PGSTART  DC    X'00002000'             -> begin page to fix
PGEND    DC    X'00002000'             -> end page to fix
PGRADD   DC    X'00002044'             -> address within the page to be fixed
*
*                            0 1 2 3  4 5 6 7 
*r 300.8
*Want "R14-R15 values"      0000021A 0000021E
*
         END
