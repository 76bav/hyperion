ASMA Ver. 0.2.0  fix-page.asm: Test the Fix Page E502 Assist                                        09 Oct 2020 17:49:43  Page     1

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                               2 *
                                               3 ***********************************************************************
                                               4 *
                                               5 *Testcase fix-page
                                               6 *  A test case for "Simplified Execution Path" of the Fix
                                               7 *  Page E502 Assist instruction.
                                               8 *
                                               9 ***********************************************************************
                                              10 *
                                              11 *                        fix-page.asm
                                              12 *
                                              13 * Created and placed into the public domain 09 OCT 2020 by Bob Polmanter.
                                              14 *
                                              15 * The Fix Page E502 Assist instruction is tested against the definition
                                              16 * of the Simplified Execution Path as described in the System/370
                                              17 * Assists for MVS, publication GA22-7079-1.  The tests for the E502
                                              18 * execution in the problem state are tested against the definition
                                              19 * in GA22-7072-0 System/370 Extended Facility within the section titled
                                              20 * Virtual-Machine Extended Facility Assist.
                                              21 *
                                              22 * Test data is assembled into this program, and some test data is
                                              23 * generated by this program. The test script (fix-page.tst) that runs
                                              24 * verifies the resulting status of registers and path taken
                                              25 * through Hercules R commands.
                                              26 *
                                              27 *
                                              28 * Tests performed with Fix Page E502:
                                              29 *
                                              30 * TEST #1
                                              31 * 1.  That GR14 contains the address of the next sequential instruction
                                              32 *       following the E502 instruction.
                                              33 * 2.  That GR15 contains the contents of the fullword field MPLPFAL.
                                              34 * 3.  That the PSW next instruction address is loaded with the fullword
                                              35 *     field MPLPFAL and that execution resumed at that location.
                                              36 *
                                              37 * TEST #2
                                              38 * 4.  Repeating the essence of Test #1, except that the PSW is in the
                                              39 *     problem state, and CR6 is set to indicate that a virtual machine
                                              40 *     is in the virtual supervisor state (CR6 bit 1=0) and the VM
                                              41 *     Extended Assist feature ("370E") is enabled (CR6 bit 29=1). When
                                              42 *     CR6 is set with these bits, this is the only case where E502 (and
                                              43 *     the other E5xx assists) are allowed to execute in real problem
                                              44 *     state.  The conditions 1, 2, and 3 of Test #1 above are reverified
                                              45 *     for test #2.
                                              46 *
                                              47 * TEST #3
                                              48 * 5.  Validates that when the PSW is in the problem state and CR6 bit
                                              49 *     1=1 (Virtual problem state) while the 370E feature is enabled
                                              50 *     (CR6 bit 29=1) that E502 execution results in a privileged
                                              51 *     operation exception.
                                              52 *
                                              53 * TEST #4
ASMA Ver. 0.2.0  fix-page.asm: Test the Fix Page E502 Assist                                        09 Oct 2020 17:49:43  Page     2

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                              54 * 6.  Validates that when the PSW is in the problem state and CR6 bit
                                              55 *     29=0 (370E feature disabled) while CR6 also indicates bit 1=0
                                              56 *     (virtual supervisor state) that E502 execution results in a
                                              57 *     privileged operation exception.
                                              58 *
                                              59 *
                                              60 * NOTE: The other bits in CR6 are used by ECPS:VM and whether or not
                                              61 *       the other VM assists are enabled, bits 1 and 29 of CR6 still
                                              62 *       control the virtualization of the E5xx assists regardless of
                                              63 *       the values of other other bits in CR6.
                                              64 *
                                              65 * NOTE: the MPLP is a control block normally maintained by some versions of
                                              66 *       the S/370 MVS operating system in support of the various Assists. The
                                              67 *       base address of the MPLP is defined by the second operand of the
                                              68 *       E502 instruction.  The word MPLPFAL is at offset 0x34 into the MPLP,
                                              69 *       as described in GA22-7079-1.
                                              70 *
                                              71 ***********************************************************************
                                              72 *
                                              73 *
                            000000  000767    74 FPA001   START 0
                            000000  000001    75 STRTLABL EQU   *
                            000000  000001    76 R0       EQU   0
                            000001  000001    77 R1       EQU   1
                            000002  000001    78 R2       EQU   2
                            000003  000001    79 R3       EQU   3
                            000004  000001    80 R4       EQU   4
                            000005  000001    81 R5       EQU   5
                            000006  000001    82 R6       EQU   6
                            000007  000001    83 R7       EQU   7
                            000008  000001    84 R8       EQU   8
                            000009  000001    85 R9       EQU   9
                            00000A  000001    86 R10      EQU   10
                            00000B  000001    87 R11      EQU   11
                            00000C  000001    88 R12      EQU   12
                            00000D  000001    89 R13      EQU   13
                            00000E  000001    90 R14      EQU   14
                            00000F  000001    91 R15      EQU   15
                                              92 *
                                              93 *
000000                      000000            94          USING *,R0
                                              95 *
                                              96 * Selected S/370 low core layout
                                              97 *
                                              98 *
000000                      000000  000000    99          ORG   STRTLABL+X'00'      Restart PSW
000000  000C0000 00000200                    100          DC    X'000C0000',A(START)
                                             101 *
000008                      000008  000020   102          ORG   STRTLABL+X'20'      SVC old PSW
000020  00000000 00000000                    103 SVCOPSW  DC    X'00000000',A(0)
                                             104 *
000028                      000028  000028   105          ORG   STRTLABL+X'28'      Program check old PSW
ASMA Ver. 0.2.0  fix-page.asm: Test the Fix Page E502 Assist                                        09 Oct 2020 17:49:43  Page     3

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

000028  00000000 00000000                    106 PGMOPSW  DC    X'00000000',A(0)
                                             107 *
000030                      000030  000060   108          ORG   STRTLABL+X'60'      SVC new PSW
000060  000C0000 00000318                    109 SVCNPSW  DC    X'000C0000',A(SVCFLIH) SVC handler
                                             110 *
000068                      000068  000068   111          ORG   STRTLABL+X'68'      Program check new PSW
000068  000C0000 000002F8                    112 PGMNPSW  DC    X'000C0000',A(PGMFLIH) PGM Check handler
                                             113 *
000070                      000070  000088   114          ORG   STRTLABL+X'88'      interrupt code area EC mode
000088  00000000                             115 SVCINTC  DC    X'00000000'         SVC interrupt code area
00008C  00000000                             116 PGMINTC  DC    X'00000000'         Prog check interrupt code area
                                             117 *
000090                      000090  0000A4   118          ORG   STRTLABL+X'A4'      Address of MPLP assist control block
0000A4  00000700                             119 AMPLP    DC    A(MPLP)
                                             120
ASMA Ver. 0.2.0  fix-page.asm: Test the Fix Page E502 Assist                                        09 Oct 2020 17:49:43  Page     4

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                             122 ***********************************************************************
                                             123 *
                                             124 *  Main program.
                                             125 *
0000A8                      0000A8  000200   126          ORG   STRTLABL+X'200'
000200                                       127 START    DS    0H
000200  4110 0001                   000001   128          LA    R1,1                    Init
000204  5010 0600                   000600   129          ST    R1,RESULTS1             Initialize results area
000208  5010 0604                   000604   130          ST    R1,RESULTS2             Initialize results area
00020C  5010 0608                   000608   131          ST    R1,RESULTS3             Initialize results area
000210  5010 060C                   00060C   132          ST    R1,RESULTS4             Initialize results area
                                             133 *
                                             134 ********** Execute Fix Page on simplified path return.
                                             135 * TEST 1 * PSW in supervisor state
                                             136 *        * CR6 all bits zero
                                             137 ********** No program checks should occur
                                             138 *
                            000214  000001   139 TEST1    EQU   *
000214  4180 0001                   000001   140          LA    R8,1                    Test 1 in progress
000218  B766 0750                   000750   141          LCTL  6,6,C6ZERO              Initialize CR6 - all bits off
00021C  4110 023C                   00023C   142          LA    R1,SUCCESS1             Value to place in MPLPFAL
000220  5010 0734                   000734   143          ST    R1,MPLPFAL              Init the field
                                             144 *
000224  9812 073C                   00073C   145          LM    R1,R2,PGSTART           -> starting,ending page addresses
000228  5800 0744                   000744   146          L     R0,PGRADD               -> address within page to be fixed
00022C  E5020000 00A4                        147          DC    X'E502',AL2(0),S(AMPLP) Fix Page; operand 1 not used
                                             148 *
                            000232  000001   149 FAIL1    EQU   *
000232  D203 0600 0748      000600  000748   150          MVC   RESULTS1,BADRC          Set bad result code
000238  47F0 0250                   000250   151          B     TEST2                   Go to next test
                                             152 *
                            00023C  000001   153 SUCCESS1 EQU   *
00023C  4110 0232                   000232   154          LA    R1,FAIL1                -> instruction after E502
000240  151E                                 155          CLR   R1,R14                  Does R14 contain correct addr?
000242  0771                                 156          BNER  R1                      No, fail the test
000244  55F0 0734                   000734   157          CL    R15,MPLPFAL             Does R15 contain MPLPFAL?
000248  0771                                 158          BNER  R1                      No, fail the test
00024A  D203 0600 074C      000600  00074C   159          MVC   RESULTS1,GOODRC         Test was successful
                                             160 *
                                             161 *
                                             162 ********** Execute Fix Page on simplified path return.
                                             163 * TEST 2 * Real PSW in problem state
                                             164 *        * CR6 = X'00000004'  (CR6 bit 1=0 (virtual supervisor state), bit 29=1 (370E enabled))
                                             165 ********** No program checks should occur
                                             166 *
                            000250  000001   167 TEST2    EQU   *
000250  4180 0002                   000002   168          LA    R8,2                    Test 2 in progress
000254  B766 0754                   000754   169          LCTL  6,6,C6ALLOW             Initialize CR6 - allow prob state execution
000258  4110 027A                   00027A   170          LA    R1,SUCCESS2             Value to place in MPLPFAL
00025C  5010 0734                   000734   171          ST    R1,MPLPFAL              Init the field
000260  0A01                                 172          SVC   1                       Enter problem state
                                             173 *
ASMA Ver. 0.2.0  fix-page.asm: Test the Fix Page E502 Assist                                        09 Oct 2020 17:49:43  Page     5

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

000262  9812 073C                   00073C   174          LM    R1,R2,PGSTART           -> starting,ending page addresses
000266  5800 0744                   000744   175          L     R0,PGRADD               -> address within page to be fixed
00026A  E5020000 00A4                        176          DC    X'E502',AL2(0),S(AMPLP) Fix Page; operand 1 not used
                                             177 *
                            000270  000001   178 FAIL2    EQU   *
000270  D203 0604 0748      000604  000748   179          MVC   RESULTS2,BADRC          Set bad result code
000276  47F0 028E                   00028E   180          B     TEST3                   Go to next test
                                             181 *
                            00027A  000001   182 SUCCESS2 EQU   *
00027A  4110 0270                   000270   183          LA    R1,FAIL2                -> instruction after E502
00027E  151E                                 184          CLR   R1,R14                  Does R14 contain correct addr?
000280  0771                                 185          BNER  R1                      No, fail the test
000282  55F0 0734                   000734   186          CL    R15,MPLPFAL             Does R15 contain MPLPFAL?
000286  0771                                 187          BNER  R1                      No, fail the test
000288  D203 0604 074C      000604  00074C   188          MVC   RESULTS2,GOODRC         Test was successful
                                             189 *
                                             190 *
                                             191 ********** Execute Fix Page on simplified path return.
                                             192 * TEST 3 * Real PSW in problem state
                                             193 *        * CR6 = X'40000004'  (CR6 bit 1=1 (virtual PROBLEM state), bit 29=1 (370E enabled))
                                             194 ********** Program check 02 should occur
                                             195 *
                            00028E  000001   196 TEST3    EQU   *
00028E  0A00                                 197          SVC   0                       Back to supervisor state
000290  4180 0003                   000003   198          LA    R8,3                    Test 3 in progress
000294  B766 0758                   000758   199          LCTL  6,6,C6VPROB             Initialize CR6 - virtual prob state + 370E
000298  4110 02BA                   0002BA   200          LA    R1,FAIL3                Value to place in MPLPFAL
00029C  5010 0734                   000734   201          ST    R1,MPLPFAL              Init the field
0002A0  0A01                                 202          SVC   1                       Enter problem state
                                             203 *
0002A2  9812 073C                   00073C   204          LM    R1,R2,PGSTART           -> starting,ending page addresses
0002A6  5800 0744                   000744   205          L     R0,PGRADD               -> address within page to be fixed
0002AA  E5020000 00A4                        206          DC    X'E502',AL2(0),S(AMPLP) Fix Page; operand 1 not used
                                             207 *
                            0002B0  000001   208 SUCCESS3 EQU   *
0002B0  D203 0608 074C      000608  00074C   209          MVC   RESULTS3,GOODRC         Set good result (expected program check occurred)
0002B6  47F0 02C0                   0002C0   210          B     TEST4                   Go to next test
                                             211 *
                            0002BA  000001   212 FAIL3    EQU   *
0002BA  D203 0608 0748      000608  000748   213          MVC   RESULTS3,BADRC          Test failed (E502 executed when it should not)
                                             214 *
                                             215 *
                                             216 *
                                             217 ********** Execute Fix Page on simplified path return.
                                             218 * TEST 4 * Real PSW in problem state
                                             219 *        * CR6 = X'00000000'  (CR6 bit 1=0 (virtual Supv state), bit 29=0 (370E disabled))
                                             220 ********** Program check 02 should occur
                                             221 *
                            0002C0  000001   222 TEST4    EQU   *
0002C0  0A00                                 223          SVC   0                       Back to supervisor state
0002C2  4180 0004                   000004   224          LA    R8,4                    Test 4 in progress
0002C6  B766 075C                   00075C   225          LCTL  6,6,C6N370E             Initialize CR6 - virtual supv state + 370E OFF
ASMA Ver. 0.2.0  fix-page.asm: Test the Fix Page E502 Assist                                        09 Oct 2020 17:49:43  Page     6

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

0002CA  4110 02EC                   0002EC   226          LA    R1,FAIL4                Value to place in MPLPFAL
0002CE  5010 0734                   000734   227          ST    R1,MPLPFAL              Init the field
0002D2  0A01                                 228          SVC   1                       Enter problem state
                                             229 *
0002D4  9812 073C                   00073C   230          LM    R1,R2,PGSTART           -> starting,ending page addresses
0002D8  5800 0744                   000744   231          L     R0,PGRADD               -> address within page to be fixed
0002DC  E5020000 00A4                        232          DC    X'E502',AL2(0),S(AMPLP) Fix Page; operand 1 not used
                                             233 *
                            0002E2  000001   234 SUCCESS4 EQU   *
0002E2  D203 060C 074C      00060C  00074C   235          MVC   RESULTS4,GOODRC         Set good result (expected program check occurred)
0002E8  47F0 02F2                   0002F2   236          B     EOJ                     All tests completed
                                             237 *
                            0002EC  000001   238 FAIL4    EQU   *
0002EC  D203 060C 0748      00060C  000748   239          MVC   RESULTS4,BADRC          Test failed (E502 executed when it should not)
                                             240
                                             241 *
                            0002F2  000001   242 EOJ      EQU   *
0002F2  0A00                                 243          SVC   0                       Back to supervisor state
0002F4  8200 0340                   000340   244          LPSW  DWAITPSW                EOJ, load disabled wait PSW
                                             245 *
                                             246 *
                                             247 * HERE FOR PROGRAM CHECKS
                                             248 *
0002F8                                       249          DS    0D
                            0002F8  000001   250 PGMFLIH  EQU   *                       PGM Check Interruption Routine
0002F8  5980 0760                   000760   251          C     R8,=F'1'                Doing test 1?
0002FC  4780 0314                   000314   252          BE    HALT                    Halt test, program check not allowed
000300  5980 0764                   000764   253          C     R8,=F'2'                Doing test 2?
000304  4780 0314                   000314   254          BE    HALT                    Halt test, program check not allowed
                                             255 *
                                             256 *                                      * tests 3&4 prog check 02 is expected
000308  9502 008F                   00008F   257          CLI   PGMINTC+3,X'02'         priv-op exception?
00030C  4770 0314                   000314   258          BNE   HALT                    No, something else wrong. Test # in R8.
000310  8200 0028                   000028   259          LPSW  PGMOPSW                 Resume execution, this is expected
                                             260 *
000314  8200 0350                   000350   261 HALT     LPSW  PGMHALT                 Halt on unexpected pgm check.
                                             262 *                                      Failed test # is in R8
                                             263 *
                                             264 * HERE FOR SVCs
                                             265 *
000318                                       266          DS    0D
                            000318  000001   267 SVCFLIH  EQU   *                       SVC Interruption Routine
000318  9500 008B                   00008B   268          CLI   SVCINTC+3,X'00'         SVC 0? (switch to supervisor state)
00031C  4780 032C                   00032C   269          BE    SVC000                  Yes
000320  9501 008B                   00008B   270          CLI   SVCINTC+3,X'01'         SVC 1? (switch to problem state)
000324  4780 0334                   000334   271          BE    SVC001                  Yes
000328  8200 0348                   000348   272          LPSW  BADSVC                  Halt on bad SVC
                                             273 *
                            00032C  000001   274 SVC000   EQU   *
00032C  94FE 0021                   000021   275          NI    SVCOPSW+1,255-X'01'     Turn off problem state bit in old PSW
000330  8200 0020                   000020   276          LPSW  SVCOPSW                 Resume execution in supv state
                                             277 *
ASMA Ver. 0.2.0  fix-page.asm: Test the Fix Page E502 Assist                                        09 Oct 2020 17:49:43  Page     7

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                            000334  000001   278 SVC001   EQU   *
000334  9601 0021                   000021   279          OI    SVCOPSW+1,X'01'         Turn on problem state bit in old PSW
000338  8200 0020                   000020   280          LPSW  SVCOPSW                 Resume execution in problem state
                                             281 *
                                             282 *
                                             283 *
000340                                       284          DS    0D                      Ensure correct alignment for psw
000340  000A0000 00000000                    285 DWAITPSW DC    X'000A000000000000'     Test end - disabled wait
000348  000A0000 00000BAD                    286 BADSVC   DC    X'000A000000000BAD'     Test end - Bad SVC #
000350  000A0000 0000DEAD                    287 PGMHALT  DC    X'000A00000000DEAD'     Unexpected program check
                                             288 *
                                             289 *
000358                      000358  000600   290          ORG   STRTLABL+X'600'
000600  00000000                             291 RESULTS1 DC    X'00000000'             Return code from test 1
000604  00000000                             292 RESULTS2 DC    X'00000000'             Return code from test 2
000608  00000000                             293 RESULTS3 DC    X'00000000'             Return code from test 3
00060C  00000000                             294 RESULTS4 DC    X'00000000'             Return code from test 4
                                             295 *
                                             296 *
000610                      000610  000700   297          ORG   STRTLABL+X'700'
                                             298 *
                                             299 * The MPLP area below defines only the relevant part of the MPLP assist control block; in this
                                             300 * case, the location at MPLP+X'34' (MPLPFAL) needs to contain the address of where the assist
                                             301 * should begin execution at the completion of the X'E502' instruction.
                                             302 *
000700  00000000                             303 MPLP     DC    A(0)                    Relevant MPLP block definition
000704  00000000                             304          DC    A(0)                    +4
000708  00000000                             305          DC    A(0)                    +8
00070C  00000000                             306          DC    A(0)                    +C
000710  00000000                             307          DC    A(0)                    +10
000714  00000000                             308          DC    A(0)                    +14
000718  00000000                             309          DC    A(0)                    +18
00071C  00000000                             310          DC    A(0)                    +1C
000720  00000000                             311          DC    A(0)                    +20
000724  00000000                             312          DC    A(0)                    +24
000728  00000000                             313          DC    A(0)                    +28
00072C  00000000                             314          DC    A(0)                    +2C
000730  00000000                             315          DC    A(0)                    +30
000734  00000000                             316 MPLPFAL  DC    A(0)                    +34
000738  00000000                             317          DC    A(0)                    +38
                                             318 *
00073C  00002000                             319 PGSTART  DC    X'00002000'             -> begin page to fix
000740  00002000                             320 PGEND    DC    X'00002000'             -> end page to fix
000744  00002044                             321 PGRADD   DC    X'00002044'             -> address within the page to be fixed
000748  00000008                             322 BADRC    DC    F'8'                    Bad result code (test failed)
00074C  00000000                             323 GOODRC   DC    F'0'                    Good result code (test success)
000750  00000000                             324 C6ZERO   DC    X'00000000'             CR6 init
000754  00000004                             325 C6ALLOW  DC    X'00000004'             CR6 Virtual Suprv state + 370E enabled
000758  40000004                             326 C6VPROB  DC    X'40000004'             CR6 Virtual Prob state + 370E enabled
00075C  00000000                             327 C6N370E  DC    X'00000000'             CR6 Virtual Suprv state but 370E Disabled
                                             328 *
                                             329 *                                    0 1 2 3
ASMA Ver. 0.2.0  fix-page.asm: Test the Fix Page E502 Assist                                        09 Oct 2020 17:49:43  Page     8

 LOC       OBJECT CODE      ADDR1   ADDR2   STMT

                                             330 *r 600.4
                                             331 *Want "Test 1 Result of zeros"      00000000
                                             332 *r 604.4
                                             333 *Want "Test 2 Result of zeros"      00000000
                                             334 *r 608.4
                                             335 *Want "Test 3 Result of zeros"      00000000
                                             336 *r 60c.4
                                             337 *Want "Test 4 Result of zeros"      00000000
                                             338 *
000760                                       339          END
000760  00000001                             340                =F'1'
000764  00000002                             341                =F'2'
ASMA Ver. 0.2.0  fix-page.asm: Test the Fix Page E502 Assist                                        09 Oct 2020 17:49:43  Page     9

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

AMPLP               A    0000A4       4   119  147  176  206  232
BADRC               F    000748       4   322  150  179  213  239
BADSVC              X    000348       8   286  272
C6ALLOW             X    000754       4   325  169
C6N370E             X    00075C       4   327  225
C6VPROB             X    000758       4   326  199
C6ZERO              X    000750       4   324  141
DWAITPSW            X    000340       8   285  244
EOJ                 U    0002F2       1   242  236
FAIL1               U    000232       1   149  154
FAIL2               U    000270       1   178  183
FAIL3               U    0002BA       1   212  200
FAIL4               U    0002EC       1   238  226
FPA001              J    000000    1896    74
GOODRC              F    00074C       4   323  159  188  209  235
HALT                I    000314       4   261  252  254  258
IMAGE               1    000000    1896     0
MPLP                A    000700       4   303  119
MPLPFAL             A    000734       4   316  143  157  171  186  201  227
PGEND               X    000740       4   320
PGMFLIH             U    0002F8       1   250  112
PGMHALT             X    000350       8   287  261
PGMINTC             X    00008C       4   116  257
PGMNPSW             X    000068       4   112
PGMOPSW             X    000028       4   106  259
PGRADD              X    000744       4   321  146  175  205  231
PGSTART             X    00073C       4   319  145  174  204  230
R0                  U    000000       1    76   94  146  175  205  231
R1                  U    000001       1    77  128  129  130  131  132  142  143  145  154  155  156  158  170  171  174  183  184
                                               185  187  200  201  204  226  227  230
R10                 U    00000A       1    86
R11                 U    00000B       1    87
R12                 U    00000C       1    88
R13                 U    00000D       1    89
R14                 U    00000E       1    90  155  184
R15                 U    00000F       1    91  157  186
R2                  U    000002       1    78  145  174  204  230
R3                  U    000003       1    79
R4                  U    000004       1    80
R5                  U    000005       1    81
R6                  U    000006       1    82
R7                  U    000007       1    83
R8                  U    000008       1    84  140  168  198  224  251  253
R9                  U    000009       1    85
RESULTS1            X    000600       4   291  129  150  159
RESULTS2            X    000604       4   292  130  179  188
RESULTS3            X    000608       4   293  131  209  213
RESULTS4            X    00060C       4   294  132  235  239
START               H    000200       2   127  100
STRTLABL            U    000000       1    75   99  102  105  108  111  114  118  126  290  297
SUCCESS1            U    00023C       1   153  142
SUCCESS2            U    00027A       1   182  170
ASMA Ver. 0.2.0  fix-page.asm: Test the Fix Page E502 Assist                                        09 Oct 2020 17:49:43  Page    10

     SYMBOL        TYPE  VALUE   LENGTH  DEFN  REFERENCES

SUCCESS3            U    0002B0       1   208
SUCCESS4            U    0002E2       1   234
SVC000              U    00032C       1   274  269
SVC001              U    000334       1   278  271
SVCFLIH             U    000318       1   267  109
SVCINTC             X    000088       4   115  268  270
SVCNPSW             X    000060       4   109
SVCOPSW             X    000020       4   103  275  276  279  280
TEST1               U    000214       1   139
TEST2               U    000250       1   167  151
TEST3               U    00028E       1   196  180
TEST4               U    0002C0       1   222  210
=F'1'               F    000760       4   340  251
=F'2'               F    000764       4   341  253
ASMA Ver. 0.2.0  fix-page.asm: Test the Fix Page E502 Assist                                        09 Oct 2020 17:49:43  Page    11

MACRO   DEFN  REFERENCES

No defined macros
ASMA Ver. 0.2.0  fix-page.asm: Test the Fix Page E502 Assist                                        09 Oct 2020 17:49:43  Page    12

   DESC    SYMBOL  SIZE    POS      ADDR

Entry: 0

Image      IMAGE   1896  000-767  000-767
  Region           1896  000-767  000-767
    CSECT  FPA001  1896  000-767  000-767
ASMA Ver. 0.2.0  fix-page.asm: Test the Fix Page E502 Assist                                        09 Oct 2020 17:49:43  Page    13

   STMT       FILE NAME

1     D:\satk\fix-page.asm


** NO ERRORS FOUND **

